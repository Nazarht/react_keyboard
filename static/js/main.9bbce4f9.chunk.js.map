{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","this","eventHandler","bind","removeEventListener","event","setState","key","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAQaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKC,aAAaC,KAAKF,SAN9D,kCASE,WACEF,SAASK,oBAAoB,QAASH,KAAKC,gBAV/C,0BAaE,SAAaG,GACXJ,KAAKK,SAAS,CACZR,WAAYO,EAAME,QAfxB,oBAmBE,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGP,KAAKJ,MAAMC,WAAX,mCAC+BG,KAAKJ,MAAMC,WAD1C,KAEG,kCAzBd,GAAyBW,IAAMC,W,MCH/BC,IAASC,OACP,cAAC,EAAD,IACAb,SAASc,eAAe,W","file":"static/js/main.9bbce4f9.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\n\ntype State = {\n  pressedKey: string | null,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.eventHandler.bind(this));\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.eventHandler);\n  }\n\n  eventHandler(event: KeyboardEvent):void {\n    this.setState({\n      pressedKey: event.key,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet' }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}